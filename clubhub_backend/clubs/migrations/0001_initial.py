# Generated by Django 4.2.7 on 2025-09-02 19:27

import clubs.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('club_logo', models.ImageField(blank=True, null=True, upload_to=clubs.models.club_logo_path)),
                ('club_name', models.CharField(max_length=100)),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('description', models.TextField(blank=True)),
                ('club_type', models.CharField(choices=[('academic', 'Academic'), ('professional', 'Professional'), ('sports', 'Sports'), ('cultural', 'Cultural'), ('technical', 'Technical'), ('social', 'Social'), ('other', 'Other')], max_length=20)),
                ('custom_club_type', models.CharField(blank=True, max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('website_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('regular', 'Regular User'), ('club', 'Club User')], default='regular', max_length=10)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=clubs.models.user_profile_pic_path)),
                ('year_in_college', models.CharField(blank=True, choices=[('freshman', 'Freshman'), ('sophomore', 'Sophomore'), ('junior', 'Junior'), ('senior', 'Senior'), ('graduate', 'Graduate'), ('alumni', 'Alumni'), ('other', 'Other')], max_length=20)),
                ('interests', models.JSONField(blank=True, default=list)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('academic', 'Academic'), ('professional', 'Professional'), ('sports', 'Sports'), ('cultural', 'Cultural'), ('technical', 'Technical'), ('social', 'Social'), ('other', 'Other')], max_length=20)),
                ('custom_event_type', models.CharField(blank=True, max_length=100)),
                ('event_title', models.CharField(max_length=200)),
                ('short_description', models.CharField(max_length=200)),
                ('detailed_description', models.TextField()),
                ('event_date', models.DateField()),
                ('event_time', models.TimeField()),
                ('location', models.CharField(max_length=500)),
                ('is_virtual', models.CharField(choices=[('real', 'Real'), ('virtual', 'Virtual')], default='real', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('max_attendees', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('affiliated_club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='clubs.club')),
                ('interested_users', models.ManyToManyField(blank=True, related_name='interested_events', to='clubs.user')),
                ('joined_users', models.ManyToManyField(blank=True, related_name='joined_events', to='clubs.user')),
            ],
            options={
                'ordering': ['event_date', 'event_time'],
            },
        ),
        migrations.AddField(
            model_name='club',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_clubs', to='clubs.user'),
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('date_achieved', models.DateField(blank=True, null=True)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='clubs.club')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='member_pics/')),
                ('member_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('year_in_college', models.CharField(choices=[('freshman', 'Freshman'), ('sophomore', 'Sophomore'), ('junior', 'Junior'), ('senior', 'Senior'), ('graduate', 'Graduate'), ('alumni', 'Alumni'), ('other', 'Other')], max_length=20)),
                ('joined_date', models.DateField()),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='clubs.club')),
            ],
            options={
                'unique_together': {('club', 'email')},
            },
        ),
        migrations.CreateModel(
            name='ClubMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_memberships', to='clubs.club')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_memberships', to='clubs.user')),
            ],
            options={
                'unique_together': {('user', 'club')},
            },
        ),
    ]
